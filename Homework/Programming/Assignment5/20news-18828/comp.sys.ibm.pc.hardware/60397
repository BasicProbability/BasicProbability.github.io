From eyalfircanberraeduau Eyal Lebedinsky
Subject Re int15h for joysticks is slow

In 1ql6i3INN8uhnonamesnerdcufledu lionessoakcircaufledu writes

Im using int15h to read my joystick and it is hideously slow  Something
like 90 of my CPU time is being spent reading the joystick and this
is in a program that does nothing but printf and JoyRead

If you only do readprint then there is no reason for the joystick stuff
not to take 90 of the time even if it is efficient

The problem is that a lot of programs trap int15h  like SMARTDRV  and
so it is a slow as hell interface  Can I read the joystick port in
a reasonably safe fashion via polling  And that isnt platform or
clockspeed specific

The truth is that int 15H joystick reading IS slow I read it directly
from the hardware port Note that doing so exposes you to intermittent
disturbance from interrupts so you may want to read say twice in a
row and keep the lower results Dont just turn interrupts off it may
prove detrimental to the health of any high speed comms and other
devices

Here is an example of how to do this

  joyc  

 An example of how to read PC joystick port by polling the hardware port
  directly
  Uses inpoutp for byte port access
  Will timeout when int count0 counts up to zero
  This sample reads one port A is presented and B is in the comments
  You can read both at once by merging the two but it will time out
  when either joystick is not connected
 
  There is no need to optimize this routine since it runs for as long as
  the joystick circuitry needs
 
  Written by Eyal Lebedinsky eyalisecanberraeduau


include stdioh
include stdlibh
include conioh

extern int readjoy int x int y int b1 int b2

define JOYPORT	0x201

define	XJOY	0x01	 for joystick B use 0x04 
define	YJOY	0x02	 for joystick B use 0x08 
define XYMASK	XJOYYJOY
define	BUT1	0x10	 for joystick B use 0x40 
define	BUT2	0x20	 for joystick B use 0x80 

int					 returns 0 if ok 
readjoy int x int y int b1 int b2

	register int	count
	register char	temp joy

	temp  charXYMASK
	count  0
	outp JOYPORT 0		 set trigger 
	do 
		temp  joy  charinp JOYPORT
		if temp  XJOY
			x  count
		if temp  YJOY
			y  count
	 while count  temp  joy  XYMASK
	b1  joy  BUT1
	b2  joy  BUT2

	return count


 This main is for demonstration


int
main 

	int	rc x y b1 b2

	printf Hit any key to exitn
	while kbhit  
		rc  readjoy x y b1 b2
		printf rd 3d 3d d d rc x y b1 b2
	

