From robertweitekCOM Robert Plamondon
Subject Re Orchid P9000 vs Fahrenheit mini review

In article 1993Apr1617312019289adobecom sherwoodadobecom 
Geoffrey Sherwood writes

In going with the modern trend the Orchid P9000 card only supports 16 colors
in 640x480 mode without a driver  Of course this breaks any DOS program
which uses SVGA modes like most of my CDROMs 

This is not the case the ROM on the P9000 supports VESA modes of up to
1024x768 in 256 colors  VESAcompliant applications should have no trouble
setting these modes But Im forwarding your posting to our Software group
just in case  Cant be too careful  Not that I doubt that YOUR applications
are failing to run lots of stuff depends on figuring out which exact SVGA
theyre looking at and dont use VESA calls VESA is still pretty new
Every new chip set confuses them

The supported resolutions really annoy me  You can do 1280x1024 at 75Hz if
you tell the driver you have an NEC 5FG they only have about six monitors
listed plus Generic and if you choose Generic you cant get any high
refreshes at ALL  But at 1024x768 you are limited to 70Hz  Seems to me
that the hardware should be able to support the bandwidth if it can do 75Hz
at 1280 it sure should be able to do it at 1024  Higher vertical resolution
was the main reason I bought the card over the Orchid F VLB I currently have
and it will do 1024x768x70 Hz as well

I think we go to AT LEAST 76 Hz at 1024x768x8 and maybe more and
its a function of the RAMDAC speed not the Power 9000 We need to
fix the problems youve noted they were already on the list  If
youre really interested though take a look at the text file
P9000RESDAT which holds the data from which the choices in the
P9000 monitor installation program are built  Working by analogy
you can build up a new monitor definition that has the right
combinations of refresh rates for your monitors  Keep a backup copy
of the file  Once youve built a new version of the P9000RESDAT
file run the P9000 installation program INST and your new choices
should show up  This assumes you have the WEITEK v 22 drivers
You can tell the rev number by looking at the modification time of
the driver 0220 is version 220  Microsoft uses this gimmick
too

The board is faster that the OFVLB for most things according to the Hercules
Speedy program This program tests various operations and reports the results
in pixelssecond  I dont have the numbers for the Graphite card but they
were close to half of the OFVLB ie slower but that was running in a 20MHz
386 ISA so the numbers arent really comparable  The following numbers
were all obtained using a 486 33 MHz AIR motherboard UMC chipset with
8 MB memory  I give ranges because the program reports the numbers as it
computes them and these tend to jump around a bit

The SPEEDY benchmark was put out by Hercules and IIT who to my
knowledge were unencumbered by any motivations except making the
Hercules GraphiteIIT AGX014 card look really good  So Id take the
numbers with a ton of salt Texas Instruments did the same thing
with WINTACH trying to make the 34020 look good compared to the
8514 as if anyone cared  Its safer though not safe to use
benchmarks from unbiased sources such as testing labs columnists
etc


Interestingly the solid
vectors and shaded polygons show no improvement and hatched polygons ie
filled with crosshatching and Ternary Rops whatever they are  Graphics
operations like XORs maybe are a dead loss on the 9000  

I think youll a large discrepancy between the results of SPEEDY and
the results of anything else in the universe on these things

I give two
numbers for the 9000 fonts because I think they are caching
When the fonts are first drawn on the screen they are done fairly slowly 
13 the speed of the OFVLB  Then the speed increases dramatically  Sounds
like programming to a benchmark to me

Font caching is a perfectly legitimate optimization  Windows has
hooks for it built right into the GDI  Whats kind of silly is IITs
use of a hardwired The quick brown fox jumped over the lazy dog then
sat on a tack string in their driver  Not only is it useless in
real applications it lacks the programming elegance of the Bart
Simpson optimization in which you save the bitmap of the
mostrecently drawn string in offscreen memory and just do a
screentoscreen bitblit if you happen to be given that same string a
second time in a row  We call it the Bart Simpson optimization
because Barts the only person we can see benefiting from it he
could right I will not cheat on benchmarks a hundred times and be
done in half the time it would take to actually form each character

I make no claims that these numbers mean anything at all  Its just what
I saw when I ran them on my computer  I normally dont write disclaimers
but this time maybe Id better  My testing is totally unconnected with my
work I program under UNIX on Decstations is done completely without the
knowledge blessing or equipment of my company

We dont have any lawyers  theyre all working for Intel  There
used to be a lawyer in Montana who didnt but he died

	 Robert


 
			    Robert Plamondon robertweitekCOM
Pay no attention to the man behind the curtain I the Great and
Glorious Oz have spoken
				 scene from a trade show
