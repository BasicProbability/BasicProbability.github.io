From trevortelesoftcom Trevor Bourget ignite
Subject Re REPOST AcceleratorsTranslations

In sdennis735423404aacadslbcom sdennisosforg writes

I posted this a while ago and didnt receive one reply and now we
have another bug report on the same subject Can anybody help me out

The problem is that Motif uses XGrabKey to implement menu accelerators
and these grabs are specific about which modifiers apply  Unfortunately
the specification for XGrabKey doesnt allow AnyModifier to be combined
with other modifiers which is exactly what would be desired in this case
Ctrl AnyKeyq

In ORA Vol 6 in the section on accelerators it says For information
on how to specify translation tables see Vol 4 this is so you
know what to put for the XmNaccelerator resource  If you go to
Vol 4 it says Likewise if a modifier is specified there is
nothing to prohibit other modifiers from being present as well For
example the translation
	ShiftKeyq	quit
will take effect even if the Ctrl key is held down at the same time as
the Shift key and the q key

This is true for accelerators and mnemonics which are implemented using
event handlers instead of grabs its not true for menu accelerators  If
youre a Motif implementor Id suggest lobbying to get the Xlib semantics
changed to support the feature I described above  Otherwise change the
documentation for menu accelerators to properly set the users
expectations because menu accelerators are NOT the same thing as
translations

Is it possible to supply  1 accelerator for a menu entry

If you mean menu accelerator no its not possible  Thats according to
the definition of the XmNaccelerator resource in the XmLabel manual page

Keep in mind when answering this question that when using Motif you
cant use XtInstallAccelerators

I cant think of a reason why not

How can you ensure that accelerators work the same independent of
case  What I want is CtrlO and Ctrlo to both be accelerators on one
menu entry

There is a workaround for Motif users  In addition to the normal menu
accelerator you install on the XmPushButtonGadget set an XtNaccelerators
resource on the shell TopLevel or Application  Install the shells
accelerators on itself and all of its descendants with
XtInstallAllAccelerators shell shell

For example

  applicationShell  mainWindow  menuBar  fileCascade
					   filePulldown  openPushbutton
							   exitPushbutton

  openPushbuttonaccelerator  CtrlKeyO
  openPushbuttonacceleratorText  CtrlO
  exitPushbuttonaccelerator  CtrlKeyQ
  exitPushbuttonacceleratorText  CtrlQ

  applicationShellaccelerators  overriden
    CtrlKeyO PerformActionopenPushbutton ArmAndActivaten
    CtrlKeyQ PerformActionexitPushbutton ArmAndActivate

You have to write and add the application action PerformAction which you
can implement by using XtNameToWidget on the first argument and then
XtCallActionProc with the rest of the arguments

I tested out something similar to this  To shorten development time I
used TeleUSEs TuNinstallAccelerators resource to install the accelerators
on the shell and I directly invoked the Open and Quit D actions instead
of asking the pushbuttons to do it for me but the more general approach I
described above should work

 Trevor Bourget trevortelesoftcom
