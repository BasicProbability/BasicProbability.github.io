From chongotoadcom Landon C Noll
Subject Reposting 10th International Obfuscated C Code Contest rules 2 of 2

We have received a number of requests for a reposting of the
International Obfuscated C Code Contest rules and guidelines  Also
some people requested that these rules be posted to a wider set of
groups  Sorry for the cross posting

Some technical clarifications were made to the rules and guidelines
See the diff marks at the right hand edge  The rules and guidelines
for this year remain the same so people who have already or are
in the process of submitting entries for the 1993 IOCCC need not worry 
about these changes

chongo Landon Curt Noll cc        chongotoadcom
Larry Bassel                            labsuncom



binsh
 This is part 02 of a multipart archive
  mkentryc 
echo x  extracting mkentryc Text
sed sX  SHAREOF  mkentryc 
X mkentryc	125 4593 155808 
X
X  Copyright c Landon Curt Noll  Larry Bassel 1993
X  All Rights Reserved  Permission for personal education or nonprofit use
X  is granted provided this this copyright and notice are included in its
X  entirety and remains unaltered  All other uses must receive prior
X  permission in writing from both Landon Curt Noll and Larry Bassel
X 
X
X  mkentry  make an International Obfuscated C Code Contest entry
X 
X  usage
X 	mkentry r remarks b build p progc o iocccentry
X 
X 	r remarks		file with remarks about the entry
X 	b build		file containing how progc should be built
X 	p progc		the obfuscated program source file
X 	o iocccentry		ioccc entry output file
X 
X  compile by
X 	cc mkentryc o mkentry
X 
X
X  Placed in the public domain by Landon Curt Noll 1992
X 
X  THIS SOFTWARE IS PROVIDED AS IS AND WITHOUT ANY EXPRESS OR IMPLIED
X  WARRANTIES INCLUDING WITHOUT LIMITATION THE IMPLIED WARRANTIES OF
X  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
X 
X
X  WARNING
X 
X  This program attempts to implement the IOCCC rules  Every attempt
X  has been made to make sure that this program produces an entry that
X  conforms to the contest rules  In all cases where this program
X  differs from the contest rules the contest rules will be used  Be
X  sure to check with the contest rules before submitting an entry
X 
X  FOR MORE INFORMATION
X 
X    You may contact the judges by sending Email to the following address
X 
X 	applepyramidsunuunethoptoadjudges	not the address for
X 	judgestoadcom					 submitting entries
X 
X    Questions and comments about the contest are welcome
X 
X   The rules and the guidelines may and often do change from year to
X   year  You should be sure you have the current rules and guidelines
X   prior to submitting entries  To obtain them send Email to the address
X   above and use the subject send rules
X 
X   One may obtain winners of previous contests 1984 to date via ftp from
X 
X 	host ftpuunet	19248969
X 	user anonymous
X 	pass yournameyourhost
X 	dir  pubioccc
X 
X   As a last resort previous winners may be obtained by sending Email
X   to the above address  Please use the subject send YEAR winners
X   where YEAR is a single 4 digit year a year range or all
X 
X  Because contest rules change from year to year one should only use this
X  program for the year that it was intended  Be sure that the RULEYEAR
X  define below matches this current year
X 
X
Xinclude stdioh
Xinclude ctypeh
Xinclude timeh
Xinclude systypesh
Xinclude sysstath
X
X logic 
Xifndef TRUE
X define TRUE 1
Xendif  TRUE 
Xifndef FALSE
X define FALSE 0
Xendif  FALSE 
Xdefine EOFOK TRUE
Xdefine EOFNOTOK FALSE
X
X global limits 
Xdefine RULEYEAR 1993		 NOTE should match the current year 
Xdefine STARTDATE 1Mar92 000 UTC	 first confirmation received 
Xdefine MAXCOL 79		 max column a line should hit 
Xdefine MAXBUILDSIZE 256	 max how to build size 
Xdefine MAXPROGRAMSIZE 3217	 max program source size 
Xdefine MAXPROGRAMSIZE2 1536	 max program source size not counting
X				   whitespace and  not followed by
X				   whitespace or EOF 
Xdefine MAXTITLELEN 12	 max chars in the title 
Xdefine MAXENTRYLEN 1		 max length in the entry input line 
Xdefine MAXENTRY 8		 max number of entries per person per year 
Xdefine MAXFILELEN 1024	 max filename length for a info file 
X
X where to send entries 
Xdefine ENTRYADDR1 applepyramidsunuunethoptoadobfuscate
Xdefine ENTRYADDR2 obfuscatetoadcom
X
X uuencode process  assumes ASCII 
Xdefine UUENCODEc encodestrintc0xff
Xdefine UUENCODELEN 45		 max uuencode chunk size 
Xdefine UUINFOMODE 0444	 mode of an info files uuencode file 
Xdefine UUBUILDMODE 0444	 mode of the build files uuencode file 
Xdefine UUBUILDNAME build	 name for the build files uuencode file 
Xdefine UUPROGMODE 0444	 mode of the programs uuencode file 
Xdefine UUPROGNAME progc	 name for the programs uuencode file 
X
X encodestrcharval is the uuencoded character of val 
Xchar encodestr2561  0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ 0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ 0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ 0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ
X
X global declarations 
Xchar program			 our name 
Xlong starttime		 the startup time 
X
X forward declarations 
Xvoid parseargs
Xvoid usage
XFILE openremark
XFILE openbuild
XFILE openprogram
XFILE openoutput
Xvoid outputentry
Xvoid outputremark
Xvoid outputauthor
Xvoid outputinfo
Xvoid outputbuild
Xvoid outputprogram
Xvoid outputend
Xint getline
Xvoid outputtilldot
Xint collen
Xvoid checkio
Xvoid uuencode
X
Xmainargc argv
X    int argc		 arg count 
X    char argv	 the args 
X
X    FILE remarkNULL	 open remarks stream 
X    FILE buildNULL	 open build file stream 
X    FILE progNULL	 open program stream 
X    FILE outputNULL	 open output stream 
X    char rnameNULL	 file with remarks about the entry 
X    char bnameNULL	 file containing how progc should be built 
X    char pnameNULL	 the obfuscated program source file 
X    char onameNULL	 ioccc entry output file 
X    struct tm tm	 startup time structure 
X
X    
X      check on the year
X     
X    starttime  timelong 0
X    tm  gmtimestarttime
X    if tmtmyear  RULEYEAR1900 
X	fprintfstderr
X	s WARNING this program applies to d which may differ from dnn
X	    argv0 RULEYEAR 1900tmtmyear
X    
X
X    
X      parse the command line args
X     
X    parseargsargc argv rname bname pname oname
X
X    
X      opencheck the input and output files
X     
X      We open and truncate the output file first in case it is the same
X      as one of the input files
X     
X    output  openoutputoname
X    remark  openremarkrname
X    build  openbuildbname
X    prog  openprogrampname
X    if outputNULL  remarkNULL  buildNULL  progNULL 
X	exit1
X    
X
X    
X      output each section
X     
X    outputentryoutput oname
X    outputremarkoutput oname remark rname
X    outputauthoroutput oname
X    outputinfooutput oname
X    outputbuildoutput oname build bname
X    outputprogramoutput oname prog pname
X    outputendoutput oname
X
X    
X      flush the output
X     
X    if fflushoutput  EOF 
X	fprintfstderr s flush error in s  program oname
X	perror
X	exit2
X    
X
X    
X      final words
X     
X    printfnYour entry can be found in s  You should check this filen
X	oname
X    printfcorrect any problems and verify that the uudecode utility willn
X    printfcorrectly decode your build file and programnn
X    printfThis program has been provided as a guide for submitters  Inn
X    printfcases where it conflicts with the rules the rules shall applyn
X    printfIt is your responsibility to ensure that your entry conforms ton
X    printfthe current rulesnn
X    printfEmail your entries ton
X    printftsn ENTRYADDR1
X    printftsnn ENTRYADDR2
X    printfPlease use the following subject when you Email your entryn
X    printftioccc entrynn
X     all done 
X    exit0
X
X
X
X  parseargs  parse the command line args
X 
X  Given the command line args this function parses them and sets the
X  required name flags  This function will return only if the command
X  line syntax is correct
X 
Xvoid
Xparseargsargc argv rname bname pname oname
X    int argc		 arg count 
X    char argv	 the args 
X    char rname	 file with remarks about the entry 
X    char bname	 file containing how progc should be built 
X    char pname	 the obfuscated program source file 
X    char oname	 ioccc entry output file 
X
X    char optarg	 flag option operand 
X    int flagname	 the name of the flag 
X    int i
X
X    
X      Not everyone has getopt so we must parse args by hand
X     
X    program  argv0
X    for i1 i  argc i 
X
X	 determine the flagname 
X	if argvi0   
X	    usage1
X	    NOTREACHED
X	
X	flagname  intargvi1
X
X	 determine the flags operand 
X	if flagname  0  argvi2  0 
X	    optarg  argvi2
X	 else 
X	    if i1  argc 
X		usage2
X		NOTREACHED
X	     else 
X		optarg  argvi
X	    
X	
X
X	 save the flags operand in the correct global variable 
X	switch flagname 
X	case r
X	    rname  optarg
X	    break
X	case b
X	    bname  optarg
X	    break
X	case p
X	    pname  optarg
X	    break
X	case o
X	    oname  optarg
X	    break
X	default
X	    usage3
X	    NOTREACHED
X	
X    
X
X    
X      verify that we have all of the required flags
X     
X    if rname  NULL  bname  NULL  pname  NULL  oname  NULL 
X	usage4
X	NOTREACHED
X    
X    return
X
X
X
X  usage  print a usage message and exit
X 
X  This function does not return
X 
Xvoid
Xusageexitval
X    int exitval		 exit with this value 
X
X    fprintfstderr
X	usage s r remarks b build p progc o iocccentrynn program
X    fprintfstderr tr remarkstfile with remarks about the entryn
X    fprintfstderr tb buildtfile containing how progc should be builtn
X    fprintfstderr tp progctthe obfuscated program source filen
X    fprintfstderr to iocccentrytioccc entry output filen
X    exitexitval
X
X
X
X  openremark  opencheck the remark file
X 
X  The remark file should be indented by 4 spaces and should not extend
X  beyond column MAXCOL  These are not requirements so we only warn
X 
X  This function returns NULL on IO or format error
X 
XFILE 
Xopenremarkfilename
X    char filename
X
X    FILE stream		 the opened file stream 
X    char bufBUFSIZ1		 input buffer 
X    int toolong0		 number of lines that are too long 
X    int nonindent0		 number of lines not indented by 4 spaces 
X
X    
X      open the remark input file
X     
X    stream  fopenfilename r
X    if stream  NULL 
X	fprintfstderr s cannot open remark file s 
X	    program filename
X	perror
X	returnNULL
X    
X
X    
X      look at each line
X     
X    while fgetsbuf BUFSIZ stream  NULL 
X
X	 count lines that do not start with 4 spaces 
X	if buf0  n  strncmpbuf      4  0 
X	    nonindent
X	
X
X	 count long lines 
X	if collenbuf  MAXCOL 
X	     found a line that is too long 
X	    toolong
X	
X    
X
X     watch for IO errors 
X    checkiostream filename EOFOK
X
X     note long lines if needed 
X    if toolong  0 
X	fprintfstderr
X	    s WARNING d lines from s extend beyond the 80th columnn
X	    program toolong filename
X	fprintfstderr
X	    s          This is ok but it would be nice to avoidnn
X	    program
X    
X
X     note nonindented lines if needed 
X    if nonindent  0 
X	fprintfstderr
X	    s WARNING d lines from s are not indented by 4 spacesn
X	    program nonindent filename
X	fprintfstderr
X	    s          This is ok but it would be nice to avoidnn
X	    program
X    
X
X     return the open file 
X    rewindstream
X    returnstream
X
X
X
X  openbuild  opencheck the build file
X 
X  The how to build file must not be longer than MAXBUILDSIZE bytes
X 
X  This function returns NULL on IO or size error
X 
XFILE 
Xopenbuildfilename
X    char filename
X
X    FILE stream		 the opened file stream 
X    struct stat statbuf	 the status of the open file 
X
X    
X      open the how to build input file
X     
X    stream  fopenfilename r
X    if stream  NULL 
X	fprintfstderr s cannot open how to build file s 
X	    program filename
X	perror
X	returnNULL
X    
X
X    
X      determine the size of the file
X     
X    if fstatfilenostream statbuf  0 
X	fprintfstderr s cannot stat how to build file s 
X	    program filename
X	perror
X	returnNULL
X    
X    if statbufstsize  MAXBUILDSIZE 
X	fprintfstderr
X	    s FATAL the how to build file s is d bytes longn
X	    program filename statbufstsize
X	fprintfstderr
X	    s        it may not be longer than d bytesn
X	    program MAXBUILDSIZE
X	returnNULL
X    
X
X     return the open file 
X    returnstream
X
X
X
X  openprogram  opencheck the program source file
X 
X  The program source file must be  3217 bytes  The number of
X  nonwhitespace and  chars not followed by whitespace must
X  be  1536 bytes
X 
X  This function returns NULL on IO or size error
X 
XFILE 
Xopenprogramfilename
X    char filename
X
X    FILE stream		 the opened file stream 
X    struct stat statbuf	 the status of the open file 
X    int count			 special count size 
X    int c			 the character read 
X
X    
X      open the program source input file
X     
X    stream  fopenfilename r
X    if stream  NULL 
X	fprintfstderr s cannot open program source file s 
X	    program filename
X	perror
X	exit7
X    
X
X    
X      determine the size of the file
X     
X    if fstatfilenostream statbuf  0 
X	fprintfstderr s cannot stat program source file s 
X	    program filename
X	perror
X	returnNULL
X    
X    if statbufstsize  MAXPROGRAMSIZE 
X	fprintfstderr
X	    s FATAL the program source file s is d bytes longn
X	    program filename statbufstsize
X	fprintfstderr
X	    s        it may not be longer than d bytesn
X	    program MAXPROGRAMSIZE
X	returnNULL
X    
X
X    
X      count the nonwhitespace non  followed by whitespace chars
X     
X    count  0
X    c  0
X    while cfgetcstream  EOF 
X	 look at nonwhitespace 
X	if isasciic  isspacec 
X	    switch c 
X	    case 		 count if not followed by EOF or whitespace 
X	    case 
X	    case 
X		 peek at next char 
X		c  fgetcstream
X		if c  EOF  isasciic  isspacec 
X		     not followed by whitespace or EOF count it 
X		    ungetcc stream
X		    count
X		
X		break
X	    default
X		count
X		break
X	    
X	
X    
X
X     watch for IO errors 
X    checkiostream filename EOFOK
X
X     look at the special size 
X    if count  MAXPROGRAMSIZE2 
X	fprintfstderr
X	    s FATAL the number of bytes that are nonwhitespace andn
X	    program
X	fprintfstderr
X	    s        that are not    followed by whitespacen
X	    program
X	fprintfstderr
X	    s        or EOF must be  d bytesn
X	    program MAXPROGRAMSIZE2
X	fprintfstderr
X	    s        in s d bytes were foundn
X	    program filename count
X	returnNULL
X    
X
X     return the open file 
X    rewindstream
X    returnstream
X
X
X
X  openoutput  opencheck the entry output file
X 
X  This function returns NULL on open error
X 
XFILE 
Xopenoutputfilename
X    char filename
X
X    FILE stream		 the opened file stream 
X
X    
X      open the ioccc entry output file
X     
X    stream  fopenfilename w
X    if stream  NULL 
X	fprintfstderr s cannot open ioccc entry file for output s 
X	    program filename
X	perror
X	exit8
X    
X
X     return the open file 
X    returnstream
X
X
X
X  outputentry  output the entry section
X 
X  Read the needed information form stdin and write the entry section
X 
Xvoid
Xoutputentryoutput oname
X    FILE output		 entrys output file stream 
X    char oname		 name of the output file 
X
X    char titleMAXTITLELEN11	 the entrys title 
X    char bufMAXCOL11		 IO buffer 
X    int entry0			 entry number 
X    int ret				 fields processed by fscanf 
X    int okline0			 0  the line is not ok 
X    char skip				 input to skip 
X    FILE datepipe			 pipe to a date command 
X    timet epochsec			 seconds since the epoch 
X    char p
X
X    
X      write the start of the section
X     
X    fprintfoutput entryn
X    checkiooutput oname EOFNOTOK
X
X    
X      write the rule year
X     
X    fprintfoutput ruletdn RULEYEAR
X    checkiooutput oname EOFNOTOK
X
X     determine if this is a fix 
X    printfIs this a fix update or resubmittion to a 
X    printfprevious entry enter y or n 
X    while getlinebuf 11 0  0  buf0y  buf0n 
X	printfnplease answer y or n 
X    
X    if buf0  y 
X	fprintfoutput fixtyn
X	checkiooutput oname EOFNOTOK
X	printfnBe sure that the title and entry number that you given
X	printfare the same of as the entry you are replacingn
X     else 
X	fprintfoutput fixtnn
X	checkiooutput oname EOFNOTOK
X    
X
X    
X      write the title
X     
X    printfnYour title must match expression be a azAZ09 charactern
X    printffollowed by 0 to d more azAZ09 charactersnn
X	MAXTITLELEN1
X    printfIt is suggested but not required that the title shouldn
X    printfincorporate your username in then
X    printfcase of multiple authors consider using parts of the usernamesn
X    printfof the authorsnn
X    printfenter your title 
X    do 
X	 prompt and read a line 
X	if okline  getlinetitle MAXTITLELEN1 MAXCOL9  0 
X	    printfntitle is too long please reenter 
X	    continue
X	
X
X	 verify the pattern not everyone has regexp so do it by hand 
X	if isasciiinttitle0 
X	    isalnuminttitle0  title0    title0   
X	    printfninvalid first character in the titlenn
X	    printfenter your title 
X	    okline  0
X	 else 
X	    for ptitle1 p  0  p  n p 
X		if isasciiintp 
X		    isalnumintp 
X		      p    p    p    p   
X		    printfninvalid character in the titlenn
X		    printfenter your title 
X		    okline  0
X		
X	    
X	
X     while okline  0
X    fprintfoutput titlets title
X    checkiooutput oname EOFNOTOK
X
X    
X      write the entry number
X     
X    printfnEach person may submit up to d entries per yearnn
X	MAXENTRY
X    printfenter an entry number from 0 to d inclusive  MAXENTRY1
X    do 
X	 get a valid input line 
X	fflushstdout
X	ret  fscanfstdin dn entry
X	checkiostdin stdin EOFNOTOK
X	 skip over input until newline is found 
X	do 
X	    skip  fgetcstdin
X	    checkiostdin stdin EOFNOTOK
X	    if skip  n 
X		 bad text in input invalidate entry number 
X		entry  1
X	    
X	 while skip  n
X
X	 check if we have a number and if it is in range 
X	if ret  1  entry  0  entry  MAXENTRY1 
X	    printf
X	      nThe entry number must be between 0 and d inclusivenn
X		MAXENTRY1
X	    printfenter the entry number 
X	
X     while ret  1  entry  0  entry  MAXENTRY1
X    fprintfoutput entrytdn entry
X    checkiooutput oname EOFNOTOK
X
X    
X      write the submission date
X     
X     returns a newline 
X    epochsec  timeNULL
X    fprintfoutput datets asctimegmtimeepochsec
X    checkiooutput oname EOFNOTOK
X
X    
X      write the OSmachine host information
X     
X    printf
X      nEnter the machines and OSs under which your entry was testedn
X    outputtilldotoutput oname host
X
X
X
X  outputremark  output the remark section
X 
X  Read the needed information form stdin and write the entry section
X 
Xvoid
Xoutputremarkoutput oname remark rname
X    FILE output		 entrys output file stream 
X    char oname		 name of the output file 
X    FILE remark		 stream to the file containing remark text 
X    char rname		 name of the remark file 
X
X    char bufBUFSIZ1		 inputoutput buffer 
X
X    
X      write the start of the section
X     
X    fprintfoutput remarkn
X    checkiooutput oname EOFNOTOK
X
X    
X      copy the remark file to the section
X     
X    while fgetsbuf BUFSIZ remark  NULL 
X	fputsbuf output
X	checkiooutput oname EOFNOTOK
X    
X    checkioremark rname EOFOK
X
X     be sure that the remark section ends with a newline 
X    if bufstrlenbuf1  n 
X	fputcn output
X	checkiooutput oname EOFNOTOK
X    
X
X
X
X  outputauthor  output the author section
X 
X  Read the needed information from stdin and write the author section
X  If multiple authors exist multiple author sections will be written
X 
Xvoid
Xoutputauthoroutput oname
X    FILE output		 entrys output file stream 
X    char oname		 name of the output file 
X
X    char bufMAXCOL11	 IO buffer 
X    int moreauths		 TRUE  more authors to note 
X    int authcnt0		 number of authors processed 
X
X    
X      prompt the user for the author section
X     
X    printfnEnter information about each author  If your entry is aftern
X    printfs and before the contest deadline the judgesn STARTDATE
X    printfwill attempt to Email back a confirmation to the first authorn
X
X    
X      place author information for each author in an individual section
X     
X    do 
X
X	 write the start of the section 
X	fprintfoutput authorn
X	checkiooutput oname EOFNOTOK
X
X	 write the author 
X	printfnAuthor d name  authcnt
X	while getlinebuf MAXCOL1 MAXCOL9  0 
X	    printfnname too long please reenter 
X	
X	fprintfoutput namets buf
X	checkiooutput oname EOFNOTOK
X
X	 write the organization 
X	printfnEnter the SchoolCompanyOrganization of author dn
X	    authcnt
X	printfnAuthor d org  authcnt
X	while getlinebuf MAXCOL1 MAXCOL9  0 
X	    printfnline too long please reenter 
X	
X	fprintfoutput orgts buf
X	checkiooutput oname EOFNOTOK
X
X	 write the address 
X	printf
X	    nEnter the postal address for author d  Be sure to includen
X	    authcnt
X	printfyour country and do not include your namen
X	outputtilldotoutput oname addr
X
X	 write the Email address 
X	printf
X	    nEnter the Email address for author d  Use an address fromn
X	    authcnt
X	printf
X	    a registered domain or well known site  If you give severaln
X	printfforms list them one per linen
X	outputtilldotoutput oname email
X
X	 write the anonymous status 
X	printfnShould author d remain anonymous enter y or n 
X	    authcnt
X	while getlinebuf 11 0  0  buf0y  buf0n 
X	    printfnplease answer y or n 
X	
X	fprintfoutput anonts buf
X	checkiooutput oname EOFNOTOK
X
X	 determine if there is another author 
X	printfnIs there another author enter y or n 
X	while getlinebuf 11 0  0  buf0y  buf0n 
X	    printfnplease answer y or n 
X	
X	if buf0  y 
X	    moreauths  TRUE
X	 else 
X	    moreauths  FALSE
X	
X     while moreauths  TRUE
X    return
X
X
X
X  outputinfo  output the info sections
X 
X  Read the needed information from stdin and write the info section
X  If multiple info files exist multiple info sections will be written
X 
Xvoid
Xoutputinfooutput oname
X    FILE output		 entrys output file stream 
X    char oname		 name of the output file 
X
X    char infonameMAXFILELEN1	 filename buffer 
X    char yorn11		 y or n answer 
X    char uuname		 name to uuencode as 
X    FILE infile		 info file stream 
X
X    
X      prompt the user for info information
X     
X    printfnInfo files should be used only to supplement your entryn
X    printfFor example info files may provide sample input or detailedn
X    printfinformation about your entry  Because they are supplementaln
X    printfthe entry should not require them to existnn
X
X    
X      while there is another info file to save uuencode it
X     
X    printfDo you have a info file to include enter y or n 
X    while getlineyorn 11 0  0  yorn0y  yorn0n 
X	printfnplease answer y or n 
X    
X    while yorn0  y 
X
X	 read the filename 
X	printfnEnter the info filename 
X	while getlineinfoname MAXFILELEN1 0  0 
X	    printfnInfo filename too long please reenter 
X	
X
X	 compute the basename of the info filename 
X	 remove the trailing newline 
X	uuname  infonamestrleninfoname1
X	uuname  0
X	 avoid rindexshrrchr compat issues do it by hand 
X	for uuname uuname  infoname uuname 
X	    if uuname   
X		uuname
X		break
X	    
X	
X
X	 attempt to open the info file 
X	infile  fopeninfoname r
X	if infile  NULL 
X	    fprintfstderr ns cannot open info file s 
X		program infoname
X	    perror
X	    continue
X	
X
X	
X	  write the start of the section
X	 
X	fprintfoutput infon
X	checkiooutput oname EOFNOTOK
X
X	 uuencode the info file 
X	uuencodeoutput oname infile infoname UUINFOMODE uuname
X
X	printfnDo you have another info file to include enter y or n 
X	while getlineyorn 11 0  0  yorn0y  yorn0n 
X	    printfnplease answer y or n 
X	
X    
X    return
X
X
X
X  outputbuild  output the build section
X 
X  Read the needed information from stdin and write the build section
X 
Xvoid
Xoutputbuildoutput oname build bname
X    FILE output		 entrys output file stream 
X    char oname		 name of the output file 
X    FILE build		 open build file stream 
X    char bname		 name of the build file 
X
X    
X      write the start of the section
X     
X    fprintfoutput buildn
X    checkiooutput oname EOFNOTOK
X
X    
X      uuencode the program file
X     
X    uuencodeoutput oname build bname UUBUILDMODE UUBUILDNAME
X    return
X
X
X
X  outputprogram  output the program section
X 
X  Read the needed information form stdin and write the program section
X 
Xvoid
Xoutputprogramoutput oname prog pname
X    FILE output		 entrys output file stream 
X    char oname		 name of the output file 
X    FILE prog			 open program stream 
X    char pname		 name of program file 
X
X    
X      write the start of the section
X     
X    fprintfoutput programn
X    checkiooutput oname EOFNOTOK
X
X    
X      uuencode the program file
X     
X    uuencodeoutput oname prog pname UUPROGMODE UUPROGNAME
X    return
X
X
X
X  outputend  output the end section
X 
X  Read the needed information form stdin and write the end section
X 
Xvoid
Xoutputendoutput oname
X    FILE output		 entrys output file stream 
X    char oname		 name of the output file 
X
X    
X      write the final section terminator
X     
X    fprintfoutput endn
X    checkiooutput oname EOFNOTOK
X    return
X
X
X
X  getline  get an answer from stdin
X 
X  This function will flush stdout in case a prompt is pending and
X  read in the answer
X 
X  This function returns 0 if the line is too long of the length of the
X  line including the newline of the line was ok  This function does
X  not return if ERROR or EOF
X 
Xint
Xgetlinebuf siz maxcol
X    char buf			 input buffer 
X    int siz			 length of input including the newline 
X    int maxcol			 max col allowed 0  disable check 
X
X    int length			 the length of the input line 
X
X     flush terminal output 
X    fflushstdout
X
X     read the line 
X    if fgetsbuf siz1 stdin  NULL 
X	 report the problem 
X	checkiostdin stdin EOFNOTOK
X    
X
X     look for the newline 
X    length  strlenbuf
X    if buflength1  n 
X	int eatchar		 the char being eaten 
X
X	 no newline found line must be too long eat the rest of the line 
X	do 
X	    eatchar  fgetcstdin
X	 while eatchar  EOF  eatchar  n
X	checkiostdin stdin EOFNOTOK
X
X	 report the situation 
X	return 0
X    
X
X     watch for long lines if needed 
X    if maxcol  0  length  maxcol  collenbuf  maxcol 
X	 report the situation 
X	return 0
X    
X
X     return length 
X    return length
X
X
X
X  outputtilldot  output a set of lines until  by itself is read
X 
X  This routine will read a set of lines until but not including
X  a single line with  is read  The format of the output is
X 
X 	leadertfirst line
X 	tnext line
X 	tnext line
X 	   
X 
X  This routine will not return if IO error or EOF
X 
Xvoid
Xoutputtilldotoutput oname leader
X    FILE output		 entrys output file stream 
X    char oname		 name of the output file 
X    char leader		 the lead text for the first line 
X
X    char bufBUFSIZ1		 input buffer 
X    int count			 lines read 
X    int doneFALSE		 TRUE  finished reading input 
X
X     instruct the user on how to input 
X    printfnTo end input enter a line with a single periodn
X
X     read lines until  or EOF 
X    count  0
X    while done 
X	 issue the prompt 
X	printfst count0    leader
X	fflushstdout
X
X	 get the line 
X	if getlinebuf BUFSIZ MAXCOL9  0 
X	    printfnline too long please reenternt
X	    continue
X	
X
X	 note if  was read 
X	if strcmpbuf n  0 
X	    done  TRUE
X	
X
X	 write line if we read something 
X	if done 
X	    fprintfoutput sts count0    leader buf
X	    checkiooutput oname EOFNOTOK
X	
X    
X
X     if no lines read at least output something 
X    if count  0 
X	fprintfoutput stn leader
X	checkiooutput oname EOFNOTOK
X    
X    return
X
X
X
X  collen  determine the highest that a string would reach
X 
X  Given a string this routine returns that a string would reach
X  if the string were printed at column 1  Tab stops are assumed
X  to start at 9 17 25 33 
X 
Xint
Xcollenstring
X    char string		 the string to examine 
X
X    int col	 current column 
X    char p	 current char 
X
X     scan the string 
X    for col0 pstring p  0  p  n p 
X	 note the column shift 
X	col  pt  1col888  col1
X    
X    if p  n 
X	col
X    
X
X     return the highest column 
X    return col
X
X
X
X  checkio  check for EOF or IO error on a stream
X 
X  Does not return if EOF or IO error
X 
Xvoid
Xcheckiostream name eofok
X    FILE stream		 the stream to check 
X    char name			 the name of this stream 
X    int eofok			 EOFOK or EOFNOTOK 
X
X     test for IO error 
X    if ferrorstream 
X	fprintfstderr s error on s  program name
X	perror
X	exit1
X
X     test for EOF 
X     else if eofok  EOFNOTOK  feofstream 
X	fprintfstderr s EOF on sn program name
X	exit1
X    
X    return
X
X
X
X  uuencode  uuencode a file
X 
X  Perform the uuencoding process identical to the process performed
X  by the uuencode1 utility
X 
X  This routine implements the algorithm described in the uuencode5
X  43BSD Reno man page
X 
Xvoid
Xuuencodeoutput oname infile iname umode uname
X    FILE output		 output file stream 
X    char oname		 output filename 
X    FILE infile		 input file stream 
X    char iname		 input filename 
X    int umode			 the mode to put on the uuencode file 
X    char uname		 name to put on the uuencode file 
X
X    char bufUUENCODELEN1	 the uuencode buffer 
X    int readlen		 actual number of chars read 
X    int val			 6 bit chunk from buf 
X    char filler0		 filler uuencode pad text 
X    char p
X
X    
X      output the initial uuencode header
X     
X    fprintfoutput begin o sn umode uname
X    checkiooutput oname EOFNOTOK
X
X    
X      clear out the input buffer
X     
X    for pbuf p  bufsizeofbufsizeofbuf0 p 
X	p  0
X    
X
X    
X      We will process UUENCODELEN chars at a time forming
X      a single output line each time
X     
X    while readlenfreadbufsizeofbuf0UUENCODELENinfile  0 
X
X	
X	  the first character is the length character
X	 
X	fputcUUENCODEreadlen output
X	checkiooutput oname EOFNOTOK
X
X	
X	  We will convert 24 bits at a time  Thus we will convert
X	  3 sets of 8 bits into 4 sets of uuencoded 6 bits
X	 
X	for pbuf readlen0 readlen3 p3 
X
X	     bits 0 to 5 
X	    val  p020x3f
X	    fputcUUENCODEval output
X	    checkiooutput oname EOFNOTOK
X
X	     bits 6 to 11 
X	    val  p040x30  p140x0f
X	    fputcUUENCODEval output
X	    checkiooutput oname EOFNOTOK
X
X	     bits 12 to 17 
X	    val  p120x3c  p260x03
X	    fputcUUENCODEval output
X	    checkiooutput oname EOFNOTOK
X
X	     bits 18 to 23 
X	    val  p20x3f
X	    fputcUUENCODEval output
X	    checkiooutput oname EOFNOTOK
X	
X
X	 end of UUENCODELEN line 
X	fputcn output
X	checkiooutput oname EOFNOTOK
X
X	
X	  clear out the input buffer  dont depend on bzero or memset
X	 
X	for pbuf p  bufsizeofbufsizeofbuf0 p 
X	    p  0
X	
X    
X
X     check the last read on the input file 
X    checkioinfile iname EOFOK
X
X     write end of uuencode file 
X    fprintfoutput cnendn UUENCODEfiller
X    checkiooutput oname EOFNOTOK
X
SHAREOF
chmod 0444 mkentryc 
echo restore of mkentryc failed
set wc c mkentrycWcc1
if test Wcc  34482 then
	echo original size 34482 current size Wcc
fi
  obfuscateinfo 
echo x  extracting obfuscateinfo Text
sed sX  SHAREOF  obfuscateinfo 
X1993 Obfuscated contest information
X
XCopyright c Landon Curt Noll  Larry Bassel 1993
XAll Rights Reserved  Permission for personal education or nonprofit use is
Xgranted provided this this copyright and notice are included in its entirety
Xand remains unaltered  All other uses must receive prior permission in writing
Xfrom both Landon Curt Noll and Larry Bassel
X
XThe International Obfuscated C Code Contest IOCCC in the sprit of
Xcooperation is willing mention other programming contents as space
Xpermits
X
XHow to have your contest included in this file
X
X    If you wish the IOCCC judges to include your contest in this file
X    send a request to
X
X	judgestoadcom
X
X    We request that contest descriptions be limited to 50 lines and to
X    not exceed 2500 bytes  We typically request that your contest
X    include a current description of the IOCCC
X
X    In order to be included in this file for given year we must
X    receive a current description no EARLIER than Jan 1 000000 UTC and
X    no LATER than Feb 15 000000 UTC  Agreement to publish your
X    contest must also be obtained prior to Feb 15  Annual contests
X    that fail to submit a new entry will be dropped from this file
X
XOfficial Disclaimer  pardon the officialese
X
X    The contents noted below other than the IOCCC are not affiliated
X    with the IOCCC nor are they endorsed by the IOCCC  We reserve the
X    right to refuse to print information about a given contest
X
X    The information below was provided by the particular contest
X    organizers and printed by permission  Please contact the
X    contest organizers directly regarding their contents
X
XWith that official notice given we present for your ENJOYMENT the following
Xinformation about contents
X
X
X
X    10th International Obfuscated C Contest
X
X	The original obfuscated contest
X
X    Obfuscate  trv  cated cating cates  1 a  To render obscure
X                b  To darken  2 To confuse  Their emotions obfuscated
X		their judgment  LLat obfuscare to darken  obintensive 
X                Lat fuscare to darken  fuscus dark obfuscation n
X                obfuscatory adj
X
X    GOALS OF THE CONTEST
X
X         To write the most ObscureObfuscated C program under the rules below
X         To show the importance of programming style in an ironic way
X         To stress C compilers with unusual code
X         To illustrate some of the subtleties of the C language
X         To provide a safe forum for poor C code  
X
X    The IOCCC is the grandfather of USENET programming contests  Since
X    1984 this contest demonstrated that a program that simply works
X    correctly is not sufficient  The IOCCC has also done much to add
X    the arcane word obfuscated back into the English language
X    see The New Hackers Dictionary by Eric Raymond
X
X    You are strongly encouraged to read the new contest rules before
X    sending any entries  The rules and sometimes the contest Email
X    address itself change over time  A valid entry one year may
X    be rejected in a later year due to changes in the rules  The typical
X    start date for contests is in early March  Contest rules are normally not
X    finalized and posted until the beginning of the contest  The typical
X    closing date for contests are in early May
X
X    The rules and the guidelines may and often do change from year to
X    year  You should be sure you have the current rules and guidelines
X    prior to submitting entries  To obtain them send Email to the address
X    above and use the subject send rules
X
X    One may obtain winners of previous contests 1984 to date via ftp from
X
X	host ftpuunet	19248969
X	user anonymous
X	pass yournameyourhost
X	dir  pubioccc
X
X    As a last resort previous winners may be obtained by sending Email
X    to the above address  Please use the subject send YEAR winners
X    where YEAR is a single 4 digit year a year range or all
X
X
X
X    0th International Obfuscated Perl Contest
X	By Landon Noll  Larry Wall
X
X    This content is being planned  Someday when Landon  Larry are not too
X    busy they will actually get around to posting the first set of rules
X
X    Landon says Yes I know that I said we would have a contest in 1993
X		  but other existing projects got in the way  Hopefully
X		  something will be developed after Nov 1993
X
X
X
X                2nd International obFUsCaTeD POsTsCripT Contest
X                     Jonathan Monsarrat jgmcsbrownedu
X                         Alena Lacova alenanikhefnl
X
X    A  contest of  programming skills  and  knowledge exclusively  for the
X    PostScript programming language Its purpose
X
X     To spread knowledge of PostScript and its details
X     To applaud those with the best tricks
X     To prove  that humans can  beat those damnable  machine generators at
X      their own game by writing  the most obscure and mysterious PostScript
X      programs ever
X
X    Winners will receive the fame and attention that goes with having their
X    program entry posted as a winner to programmers worldwide
X
X    The 1993 contest rules and results are available by ftp as
X    wilmacsbrownedupubpostscriptobfuscatedshar or individually
X    in the obfuscated directory The judges will post the 1994 rules
X    in November to complangpostscript on Usenet and other places
X    Send questions to jgmcsbrownedu
X
X    Categories include Best Obfuscated PostScript Best Artwork
X    Most Compact Best Interactive Program Most Useful and
X    anything so unusual and creative that it deserves an award
X
X    The judges will choose the winners of each category
X
X    Alena Lacova  is a system  administrator at NIKHEF  Institute for High
X    Energy and Nuclear  Physics in the  Netherlands She is  the author of
X    The PostScript Chaos  Programs which draw  Julia sets Mandelbrot sets
X    and other kinds of fractal functions
X
X    Jonathan Monsarrat is a graduate  student from MIT and Brown University
X    in  the  USA He  is  the  FAQ maintainer  for  the  Usenet newsgroup
X    complangpostscript and the author of The PostScript Zone and LameTeX
X 
X
SHAREOF
chmod 0444 obfuscateinfo 
echo restore of obfuscateinfo failed
set wc c obfuscateinfoWcc1
if test Wcc  6418 then
	echo original size 6418 current size Wcc
fi
exit 0
 
Sunnyvale residents Vote Landon Noll for Sunnyvale City Council seat 1
