From kensugrauucp Kenneth Ng
Subject Re Identifying  Securing Files

In article 2bb29f4cmashbouldercous rmashlanmashcsnorg Robert Mashlan writes
tarnoldvnetIBMCOM Todd W Arnold said in article 19930322101356617almadenibmcom
Its OK as long as you trust the enduser to stay out of your application
program  or as long as it runs in a system where the user cant get to it
Otherwise you cant stop him from finding the load a module code in your
program and simply bypassing the check for a valid module  The devious user
can either modify the object code before running the program or he can run
the program under a debugger and change the instructions in memory
There is a way to foil debuggers by clearing the single step 
interrupt on which a debugger depends every few instructions in 
the sensitive areas of the code

This assumes the person is using the hardware debug instruction of an X86
type processor  It can be negated by NOPing the clear debug instruction
or by running the code on a machine simulator like one I wrote as a senior
project in college  It can bypass and trace practically anything one could
write in software  Kind of like being on a Star Trek Holideck 

 
Kenneth Ng
Please reply to keneies2njitedu for now
All this might be an elaborate simulation running in a little device sitting
on someones table  JL Picard STTNG
