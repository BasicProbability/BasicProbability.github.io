From jicscolumbiaedu John Ioannidis
Subject Re Source of random bits on a Unix workstation

In article C5JA6sA59cspsuedu soeiffelcspsuedu Nicol C So writes
In article 897pivotsbicom betsbicom Bennett Todd  Salomon Brothers Inc NY  writes
This came up because I decided to configure up MITMAGICCOOKIE1 security
for X11R5 For this to work you need to stick some bits that an intruder
cant guess in a file readable only by you which X client applications
read They pass the bits back to the server when they want to establish a
connection


What I settled on was grabbing a bunch of traffic off the network
Basically I ran

	etherfind u x greater 0compress

and skipped over 10K of output then grabbed my bits As best I can tell
these are bits that can be expected to be reasonably uniformly distributed
and quite unguessable by an intruder

For your application what you can do is to encrypt the realtime clock
value with a secret key

For a good discussion of cryptographically good random number
generators check out the draftietfsecurityrandomness00txt
Internet Draft available at your local friendly internet drafts
repository 

A reasonably source of randomness is the output of a cryptographic
hash function eg MD5 when fed with a large amount of
moreorless random data For example running MD5 on devmem is a
slow but random enough source of random bits there are bound to be
128 bits of entropy in the tens or hundreds of megabytes of data in
a modern workstations memory as a fair amount of them are system
timers io buffers etc

ji
